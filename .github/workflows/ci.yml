name: Stage One 

on:
  push:
  pull_request:
    types: [opened, reopened]
    branches:
      - develop
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Install dependencies
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build -c Release --no-restore
      
      - name: Test
        run: dotnet test -c Release --no-restore --collect:"XPlat Code Coverage" --logger "trx;LogFilePrefix=TestResults" -r TestResults

      - name: upload TestResults
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./TestResults
  report:
    name: Report Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          
      - name: ls
        run: |
          ls -r
          
      - name: Report Tests
        id: report-tests
        uses: dorny/test-reporter@v1
        with:
          name: .Net Tests
          path: "**.trx"
          reporter: dotnet-trx

      - name: Add Test Result PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          message: Tests run with ${{ steps.report-tests.outputs.passed }} passed and ${{ steps.report-tests.outputs.failed }} failed in ${{ steps.report-tests.outputs.time }}ms.
          
  analysis:
    name: Analyze
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Install dependencies
        run: dotnet restore --locked-mode
        
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"AnswerKing" /o:"kirbyalasdairanswer" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.flex.cobertura.reportPaths=**/coverage.cobertura.xml
          dotnet build -c Release --no-restore
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
