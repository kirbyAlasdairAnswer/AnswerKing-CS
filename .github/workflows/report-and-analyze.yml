name: Stage Two

on:
  workflow_call:
      
jobs:
  integration-test:
    name: Report Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: download test results
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          workflow: build-and-test.yml
          name: test-results

      - name: Report Tests
        id: report-tests
        uses: dorny/test-reporter@v1
        with:
          name: .Net Tests
          path: "**.trx"
          reporter: dotnet-trx

      - name: Add Test Result PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          message: Tests run with ${{ steps.report-tests.outputs.passed }} passed and ${{ steps.report-tests.outputs.failed }} failed in ${{ steps.report-tests.outputs.time }}ms.
          
  analysis:
      name: Analyse
      runs-on: ubuntu-latest
      steps:            
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            
        - name: cache
          uses: actions/cache@v3
          with:
            path: |
              ~/.nuget/packages
              !~/.nuget/packages/unwanted
            key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            restore-keys: |
              ${{ runner.os }}-nuget-
              
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v3
          with:
            global-json-file: global.json

        - name: Install dependencies
          run: dotnet restore --locked-mode

        - name: Install SonarCloud scanners
          run: |
            dotnet tool install --global dotnet-sonarscanner
            
        - name: download env
          uses: dawidd6/action-download-artifact@v2
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            run_id: ${{ github.event.workflow_run.id }}
            workflow: build-and-test.yml
            name: test-results

        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            dotnet-sonarscanner begin /k:"AnswerKing" /o:"kirbyalasdairanswer" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="TestResults/*/coverage.opencover.xml"
            dotnet build -c Release --no-restore
            dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
